# coding: utf-8

"""
    Swagger CrowdSec

    CrowdSec local API

    The version of the OpenAPI document: 1.0.0
    Contact: contact@crowdsec.net
    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING
from pydantic import BaseModel, Field, RootModel


class Decision(BaseModel):
    # the origin of the decision : cscli, crowdsec
    origin: str = Field(alias='origin')

    # the type of decision, might be 'ban', 'captcha' or something custom. Ignored when watcher (cscli/crowdsec) is pushing to APIL.
    type: str = Field(alias='type')

    # the scope of decision : does it apply to an IP, a range, a username, etc
    scope: str = Field(alias='scope')

    # the value of the decision scope : an IP, a range, a username, etc
    value: str = Field(alias='value')

    # the duration of the decisions
    duration: str = Field(alias='duration')

    scenario: str = Field(alias='scenario')

    # (only relevant for GET ops) the unique id
    id: typing.Optional[int] = Field(None, alias='id')

    # only relevant for LAPI->CAPI, ignored for cscli->LAPI and crowdsec->LAPI
    uuid: typing.Optional[str] = Field(None, alias='uuid')

    # the date until the decisions must be active
    until: typing.Optional[str] = Field(None, alias='until')

    # true if the decision result from a scenario in simulation mode
    simulated: typing.Optional[bool] = Field(None, alias='simulated')
    class Config:
        arbitrary_types_allowed = True
